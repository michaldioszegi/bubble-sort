/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.InputMismatchException;

public class JavaApplication3 {

    /**
     * @param args the command line arguments
     * @throws java.io.FileNotFoundException
     */
    public static void main(String[] args) throws FileNotFoundException {
        Scanner input = new Scanner(System.in);
        final int SEATING_CAPACITY = 12;
        String[] airplane = new String[SEATING_CAPACITY];
        String PASSANGER_NAME;
        int SEAT_NUMBER;
        String OPTION = "";
        initialise(airplane);    // Initialise array as Empty & add Pilot
        while (!"Q".equals(OPTION)) {    

            System.out.println("\n"
                    + "       ---------------------\n"
                    + "       |   BOOKING SYSTEM  |\n"
                    + "       ---------------------\n"
                    + "Please select one of the following options:\n\n"
                    + "V:  Display All seats\n"
                    + "E:  Display Empty seats\n"
                    + "A:  Add a passanger\n"
                    + "D:  Delete passanger from a seat\n"
                    + "F:  Find the seat for a given passanger name\n"
                    + "S:  Store program data in to file\n"
                    + "L:  Load program data from a file\n"
                    + "O:  View Seats Ordered Alphabetically by name\n"
                    + "Q:  To quit the program\n");
            OPTION = input.next();
            
            if (OPTION.equals("E")) {
                showEmptySeats(airplane);
            } else if (OPTION.equals("A")) {
                input.nextLine();       //EATS WHITE SPACE
                System.out.println("What is name of the passanger?: ");
                PASSANGER_NAME = input.nextLine();
                do {
                    System.out.println("Please select seat between 1 - 11: ");
                    try {
                        SEAT_NUMBER = input.nextInt();
                        if (SEAT_NUMBER < 12 && SEAT_NUMBER > 0) {          //Check that value is Int, if not RE-TRY
                            addPassanger(airplane, PASSANGER_NAME, SEAT_NUMBER);
                            break;
                        }
                    } catch (InputMismatchException e) {
                        System.out.println("Please input numbers 1 - 11 or input -1 to go Back");
                        SEAT_NUMBER = 0;
                        input.nextLine(); //promt user about error and ask him to repeat in range 1 - 12
                    }
                } while (SEAT_NUMBER != -1);
            } else if (OPTION.equals("D")) {
                do {
                    System.out.println("Please select seat between 1 - 11: ");
                    try {
                        SEAT_NUMBER = input.nextInt();
                        if (SEAT_NUMBER < 12 && SEAT_NUMBER > 0) {          //Check that value is Int, if not RE-TRY
                            deletePassanger(airplane, SEAT_NUMBER);
                            break;
                        }
                    } catch (InputMismatchException e) {
                        System.out.println("Please input numbers 1 - 11 or input -1 to go Back");
                        SEAT_NUMBER = 0;
                        input.nextLine(); //promt user about error and ask him to repeat in range 1 - 12
                    }
                } while (SEAT_NUMBER != -1); 
            } else if (OPTION.equals("V")) {
                viewAllSeats(airplane);
            } else if (OPTION.equals("O")) {
                System.out.println("Right before calling function");
                organise(airplane);
            } else if (OPTION.equals("F")) {
                System.out.println("Find a passanger on seat number? ");
                do {
                    System.out.println("Please select seat between 1 - 11: ");
                    try {
                        SEAT_NUMBER = input.nextInt();
                        if (SEAT_NUMBER < 12 && SEAT_NUMBER > 0) {          //Check that value is Int, if not RE-TRY
                            findPassanger(airplane, SEAT_NUMBER);
                            break;
                        }
                    } catch (InputMismatchException e) {
                        System.out.println("Please input numbers 1 - 11 or input -1 to go Back");
                        SEAT_NUMBER = 0;
                        input.nextLine(); //promt user about error and ask him to repeat in range 1 - 12
                    }
                } while (SEAT_NUMBER != -1); 
            } else if (OPTION.equals("S")) {
                savePassangers(airplane);
            } else if (OPTION.equals("L")) {
                loadPassangers(airplane);
            }
        }
    }

    private static void initialise(String[] airplane) {
        for (int i = 0; i < airplane.length; i++) {
            airplane[i] = "Empty";
        }
        airplane[0] = "Pilot";
        System.out.println("Initialised...");
    }

    private static void showEmptySeats(String[] airplane) {
        for (int i = 0; i < airplane.length; i++) {
            if (airplane[i].equals("Empty")) {
                System.out.println("Seat number " + i + " is Empty");
            }
        }
    }

    private static void addPassanger(String[] airplane, String PASSANGER_NAME, int SEAT_NUMBER) {
        if (airplane[SEAT_NUMBER].equals("Empty")) {
            airplane[SEAT_NUMBER] = PASSANGER_NAME;
            System.out.println("Passanger succesfully added.");
        } else {
            System.out.println("Please select Empty seat.");
        }
    }

    private static void findPassanger(String[] airplane, int SEAT_NUMBER) {
        System.out.println("On seat number: " + SEAT_NUMBER + " sits " + airplane[SEAT_NUMBER]);
    }

    private static void organise(String[] airplane) {
        int TRAVERSAL = 0;  // not sure if can be split in HALF
        int SWAP = - 1; // Shortens iteration through array
        int order = 1; // Display number in ordered list
        String[] BUBBLE_ARRAY = new String[airplane.length];
        for (int i = 1; i < airplane.length; i++) {  //Copy array
            BUBBLE_ARRAY[i] = airplane[i];          //can use System.arrayCopy
        }

        while (TRAVERSAL != BUBBLE_ARRAY.length) {
            for (int i = 1; i < BUBBLE_ARRAY.length - 1; i++) {
                if (i < BUBBLE_ARRAY.length - SWAP) {
                    int a = BUBBLE_ARRAY[i].compareToIgnoreCase(BUBBLE_ARRAY[i + 1]);
                    if (a > 0) {
                        String TEMPORARY = BUBBLE_ARRAY[i];
                        BUBBLE_ARRAY[i] = BUBBLE_ARRAY[i + 1];
                        BUBBLE_ARRAY[i + 1] = TEMPORARY;
                        SWAP--;
                    }
                }
            }
            TRAVERSAL++;
        }
        System.out.println("Sorted array showed bellow.\n");
        for (int i = 1; i < BUBBLE_ARRAY.length; i++) {
            if (!"Empty".equals(BUBBLE_ARRAY[i])) {         // PREVENTS DISPLAY OF "EMPTY"
                System.out.println(order + ". " +BUBBLE_ARRAY[i]);
                order ++;
            }
        }
    }

    private static void deletePassanger(String[] airplane, int SEAT_NUMBER) {
        Scanner input = new Scanner(System.in);
        String ANSWER;
        if (!"Pilot".equals(airplane[SEAT_NUMBER])) {
            System.out.println("Do you want to delete passanger?: " + airplane[SEAT_NUMBER] + "\n Please Select Yes or No");
            ANSWER = input.next();
            switch (ANSWER) {
                case "Yes":
                case "Y":
                case "y":
                    airplane[SEAT_NUMBER] = "Empty";
                    System.out.println("Passanger deleted.");
                case "No":
                case "N":
                case "n":
                    break;
                default:
            }
        }
    }   

    private static void viewAllSeats(String[] airplane) {
        for (int i = 0; i < airplane.length; i++) {
            System.out.println("Seat number " + i + " = " + airplane[i]);
        }
    }

    private static void savePassangers(String[] airplane) throws FileNotFoundException {
        try (PrintWriter out = new PrintWriter("D:\\Michal\\University\\Programming Principles II\\Assesment 1\\JavaApplication3\\build\\src\\javaapplication3\\passangers.dat")) {
            for (int i = 0; i < airplane.length; i++) {
                out.println(airplane[i]);
            }
            out.close();
        }

        System.out.println("File succesfully saved.");
    }

    private static void loadPassangers(String[] airplane) throws FileNotFoundException {
        File inputFile = new File("D:\\Michal\\University\\Programming Principles II\\Assesment 1\\JavaApplication3\\build\\src\\javaapplication3\\passangers.dat");
        Scanner inFile = new Scanner(inputFile);
        int i = 0;
        while (inFile.hasNextLine()) {
            airplane[i] = inFile.nextLine();
            i++;
        }
        inFile.close();
        System.out.println("File succesfully loaded.");
    }
